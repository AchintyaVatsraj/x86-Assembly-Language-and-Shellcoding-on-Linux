(gdb) break _start
Breakpoint 1 at 0x8048097
(gdb) runb
Undefined command: "runb".  Try "help".
(gdb) run
Starting program: /home/lab/Documents/SLAE/10_Procedures/10_Procedure 

Breakpoint 1, 0x08048097 in _start ()
(gdb) disassemble 
Dump of assembler code for function _start:
=> 0x08048097 <+0>:	jmp    0x8048099 <Begin>
End of assembler dump.
(gdb) display/x $eip
1: /x $eip = 0x8048097
(gdb) display/x $ecx
2: /x $ecx = 0x0
(gdb) define hook-stop
Type commands for definition of "hook-stop".
End with a line saying just "end".
>x/6xb $esp
>disassemble $eip,+10
>end
(gdb)
(gdb) disassemble 
Dump of assembler code for function _start:
=> 0x08048097 <+0>:	jmp    0x8048099 <Begin>
End of assembler dump.
(gdb) nexti
0xbffff0e0:	0x01	0x00	0x00	0x00	0xb0	0xf2
Dump of assembler code from 0x8048099 to 0x80480a3:
=> 0x08048099 <Begin+0>:	mov    ecx,0x5
   0x0804809e <PrintHW+0>:	push   ecx
   0x0804809f <PrintHW+1>:	call   0x8048080 <PHW_Procedure>
End of assembler dump.
0x08048099 in Begin ()
1: /x $eip = 0x8048099
2: /x $ecx = 0x0
(gdb) nexti
0xbffff0e0:	0x01	0x00	0x00	0x00	0xb0	0xf2
Dump of assembler code from 0x804809e to 0x80480a8:
=> 0x0804809e <PrintHW+0>:	push   ecx
   0x0804809f <PrintHW+1>:	call   0x8048080 <PHW_Procedure>
   0x080480a4 <PrintHW+6>:	pop    ecx
   0x080480a5 <PrintHW+7>:	loop   0x804809e <PrintHW>
   0x080480a7 <Exit+0>:	mov    eax,0x1
End of assembler dump.
0x0804809e in PrintHW ()
1: /x $eip = 0x804809e
2: /x $ecx = 0x5
(gdb) nexti
0xbffff0dc:	0x05	0x00	0x00	0x00	0x01	0x00
Dump of assembler code from 0x804809f to 0x80480a9:
=> 0x0804809f <PrintHW+1>:	call   0x8048080 <PHW_Procedure>
   0x080480a4 <PrintHW+6>:	pop    ecx
   0x080480a5 <PrintHW+7>:	loop   0x804809e <PrintHW>
   0x080480a7 <Exit+0>:	mov    eax,0x1
End of assembler dump.
0x0804809f in PrintHW ()
1: /x $eip = 0x804809f
2: /x $ecx = 0x5
(gdb) nexti
0xbffff0d8:	0xa4	0x80	0x04	0x08	0x05	0x00
Dump of assembler code from 0x8048080 to 0x804808a:
=> 0x08048080 <PHW_Procedure+0>:	mov    eax,0x4
   0x08048085 <PHW_Procedure+5>:	mov    ebx,0x1
End of assembler dump.
0x08048080 in PHW_Procedure ()
1: /x $eip = 0x8048080
2: /x $ecx = 0x5
(gdb) nexti
0xbffff0d8:	0xa4	0x80	0x04	0x08	0x05	0x00
Dump of assembler code from 0x8048085 to 0x804808f:
=> 0x08048085 <PHW_Procedure+5>:	mov    ebx,0x1
   0x0804808a <PHW_Procedure+10>:	mov    ecx,0x80490b4
End of assembler dump.
0x08048085 in PHW_Procedure ()
1: /x $eip = 0x8048085
2: /x $ecx = 0x5
(gdb) nexti
0xbffff0d8:	0xa4	0x80	0x04	0x08	0x05	0x00
Dump of assembler code from 0x804808a to 0x8048094:
=> 0x0804808a <PHW_Procedure+10>:	mov    ecx,0x80490b4
   0x0804808f <PHW_Procedure+15>:	mov    edx,0xe
End of assembler dump.
0x0804808a in PHW_Procedure ()
1: /x $eip = 0x804808a
2: /x $ecx = 0x5
(gdb) nexti
0xbffff0d8:	0xa4	0x80	0x04	0x08	0x05	0x00
Dump of assembler code from 0x804808f to 0x8048099:
=> 0x0804808f <PHW_Procedure+15>:	mov    edx,0xe
   0x08048094 <PHW_Procedure+20>:	int    0x80
   0x08048096 <PHW_Procedure+22>:	ret    
   0x08048097 <_start+0>:	jmp    0x8048099 <Begin>
End of assembler dump.
0x0804808f in PHW_Procedure ()
1: /x $eip = 0x804808f
2: /x $ecx = 0x80490b4
(gdb) nexti
0xbffff0d8:	0xa4	0x80	0x04	0x08	0x05	0x00
Dump of assembler code from 0x8048094 to 0x804809e:
=> 0x08048094 <PHW_Procedure+20>:	int    0x80
   0x08048096 <PHW_Procedure+22>:	ret    
   0x08048097 <_start+0>:	jmp    0x8048099 <Begin>
   0x08048099 <Begin+0>:	mov    ecx,0x5
End of assembler dump.
0x08048094 in PHW_Procedure ()
1: /x $eip = 0x8048094
2: /x $ecx = 0x80490b4
(gdb) nexti
Hello world!! 0xbffff0d8:	0xa4	0x80	0x04	0x08	0x05	0x00
Dump of assembler code from 0x8048096 to 0x80480a0:
=> 0x08048096 <PHW_Procedure+22>:	ret    
   0x08048097 <_start+0>:	jmp    0x8048099 <Begin>
   0x08048099 <Begin+0>:	mov    ecx,0x5
   0x0804809e <PrintHW+0>:	push   ecx
   0x0804809f <PrintHW+1>:	call   0x8048080 <PHW_Procedure>
End of assembler dump.
0x08048096 in PHW_Procedure ()
1: /x $eip = 0x8048096
2: /x $ecx = 0x80490b4
(gdb) nexti
0xbffff0dc:	0x05	0x00	0x00	0x00	0x01	0x00
Dump of assembler code from 0x80480a4 to 0x80480ae:
=> 0x080480a4 <PrintHW+6>:	pop    ecx
   0x080480a5 <PrintHW+7>:	loop   0x804809e <PrintHW>
   0x080480a7 <Exit+0>:	mov    eax,0x1
   0x080480ac <Exit+5>:	mov    ebx,0x2
End of assembler dump.
0x080480a4 in PrintHW ()
1: /x $eip = 0x80480a4
2: /x $ecx = 0x80490b4
(gdb) nexti
0xbffff0e0:	0x01	0x00	0x00	0x00	0xb0	0xf2
Dump of assembler code from 0x80480a5 to 0x80480af:
=> 0x080480a5 <PrintHW+7>:	loop   0x804809e <PrintHW>
   0x080480a7 <Exit+0>:	mov    eax,0x1
   0x080480ac <Exit+5>:	mov    ebx,0x2
End of assembler dump.
0x080480a5 in PrintHW ()
1: /x $eip = 0x80480a5
2: /x $ecx = 0x5
(gdb) nexti
0xbffff0e0:	0x01	0x00	0x00	0x00	0xb0	0xf2
Dump of assembler code from 0x804809e to 0x80480a8:
=> 0x0804809e <PrintHW+0>:	push   ecx
   0x0804809f <PrintHW+1>:	call   0x8048080 <PHW_Procedure>
   0x080480a4 <PrintHW+6>:	pop    ecx
   0x080480a5 <PrintHW+7>:	loop   0x804809e <PrintHW>
   0x080480a7 <Exit+0>:	mov    eax,0x1
End of assembler dump.
0x0804809e in PrintHW ()
1: /x $eip = 0x804809e
2: /x $ecx = 0x4
(gdb) nexti
0xbffff0dc:	0x04	0x00	0x00	0x00	0x01	0x00
Dump of assembler code from 0x804809f to 0x80480a9:
=> 0x0804809f <PrintHW+1>:	call   0x8048080 <PHW_Procedure>
   0x080480a4 <PrintHW+6>:	pop    ecx
   0x080480a5 <PrintHW+7>:	loop   0x804809e <PrintHW>
   0x080480a7 <Exit+0>:	mov    eax,0x1
End of assembler dump.
0x0804809f in PrintHW ()
1: /x $eip = 0x804809f
2: /x $ecx = 0x4

