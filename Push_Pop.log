#gdb tracing for push pop operation for "Push_Pop.nasm" program

(gdb) display/x $eax
1: /x $eax = 0x0
(gdb) display/x $ebx
2: /x $ebx = 0x0
(gdb) display/x $ecx
3: /x $ecx = 0x0
(gdb) define hook-stop
Type commands for definition of "hook-stop".
End with a line saying just "end".
>x/7xb $esp
>x/4xh $esp
>x/3xw $esp
>x/7xb &sample
>disassemble $eip,+10
>end
(gdb) 

(gdb) disassemble 
Dump of assembler code for function _start:
=> 0x08048080 <+0>:	mov    eax,0xaabbccdd
   0x08048085 <+5>:	mov    ebx,0x0
   0x0804808a <+10>:	mov    ecx,0x0
   0x0804808f <+15>:	push   ax
   0x08048091 <+17>:	pop    bx
   0x08048093 <+19>:	push   eax
   0x08048094 <+20>:	pop    ecx
   0x08048095 <+21>:	push   WORD PTR ds:0x80490b0
   0x0804809c <+28>:	pop    ecx
   0x0804809d <+29>:	push   DWORD PTR ds:0x80490b0
   0x080480a3 <+35>:	pop    edx
   0x080480a4 <+36>:	mov    eax,0x1
   0x080480a9 <+41>:	mov    ebx,0x1
   0x080480ae <+46>:	int    0x80
End of assembler dump.
(gdb) info registers 
eax            0x0	0
ecx            0x0	0
edx            0x0	0
ebx            0x0	0
esp            0xbffff0f0	0xbffff0f0
ebp            0x0	0x0
esi            0x0	0
edi            0x0	0
eip            0x8048080	0x8048080 <_start>
eflags         0x202	[ IF ]
cs             0x73	115
ss             0x7b	123
ds             0x7b	123
es             0x7b	123
fs             0x0	0
gs             0x0	0
(gdb) nexti
0xbffff0f0:	0x01	0x00	0x00	0x00	0xc7	0xf2	0xff
0xbffff0f0:	0x0001	0x0000	0xf2c7	0xbfff
0xbffff0f0:	0x00000001	0xbffff2c7	0x00000000
0x80490b0:	0xaa	0xbb	0xcc	0xdd	0xee	0xff	0x11
Dump of assembler code from 0x8048085 to 0x804808f:
=> 0x08048085 <_start+5>:	mov    ebx,0x0
   0x0804808a <_start+10>:	mov    ecx,0x0
End of assembler dump.
0x08048085 in _start ()
1: /x $eax = 0xaabbccdd
2: /x $ebx = 0x0
3: /x $ecx = 0x0
(gdb) nexti
0xbffff0f0:	0x01	0x00	0x00	0x00	0xc7	0xf2	0xff
0xbffff0f0:	0x0001	0x0000	0xf2c7	0xbfff
0xbffff0f0:	0x00000001	0xbffff2c7	0x00000000
0x80490b0:	0xaa	0xbb	0xcc	0xdd	0xee	0xff	0x11
Dump of assembler code from 0x804808a to 0x8048094:
=> 0x0804808a <_start+10>:	mov    ecx,0x0
   0x0804808f <_start+15>:	push   ax
   0x08048091 <_start+17>:	pop    bx
   0x08048093 <_start+19>:	push   eax
End of assembler dump.
0x0804808a in _start ()
1: /x $eax = 0xaabbccdd
2: /x $ebx = 0x0
3: /x $ecx = 0x0
(gdb) nexti
0xbffff0f0:	0x01	0x00	0x00	0x00	0xc7	0xf2	0xff
0xbffff0f0:	0x0001	0x0000	0xf2c7	0xbfff
0xbffff0f0:	0x00000001	0xbffff2c7	0x00000000
0x80490b0:	0xaa	0xbb	0xcc	0xdd	0xee	0xff	0x11
Dump of assembler code from 0x804808f to 0x8048099:
=> 0x0804808f <_start+15>:	push   ax
   0x08048091 <_start+17>:	pop    bx
   0x08048093 <_start+19>:	push   eax
   0x08048094 <_start+20>:	pop    ecx
   0x08048095 <_start+21>:	push   WORD PTR ds:0x80490b0
End of assembler dump.
0x0804808f in _start ()
1: /x $eax = 0xaabbccdd
2: /x $ebx = 0x0
3: /x $ecx = 0x0
(gdb) nexti
0xbffff0ee:	0xdd	0xcc	0x01	0x00	0x00	0x00	0xc7
0xbffff0ee:	0xccdd	0x0001	0x0000	0xf2c7
0xbffff0ee:	0x0001ccdd	0xf2c70000	0x0000bfff
0x80490b0:	0xaa	0xbb	0xcc	0xdd	0xee	0xff	0x11
Dump of assembler code from 0x8048091 to 0x804809b:
=> 0x08048091 <_start+17>:	pop    bx
   0x08048093 <_start+19>:	push   eax
   0x08048094 <_start+20>:	pop    ecx
   0x08048095 <_start+21>:	push   WORD PTR ds:0x80490b0
End of assembler dump.
0x08048091 in _start ()
1: /x $eax = 0xaabbccdd
2: /x $ebx = 0x0
3: /x $ecx = 0x0
(gdb) nexti
0xbffff0f0:	0x01	0x00	0x00	0x00	0xc7	0xf2	0xff
0xbffff0f0:	0x0001	0x0000	0xf2c7	0xbfff
0xbffff0f0:	0x00000001	0xbffff2c7	0x00000000
0x80490b0:	0xaa	0xbb	0xcc	0xdd	0xee	0xff	0x11
Dump of assembler code from 0x8048093 to 0x804809d:
=> 0x08048093 <_start+19>:	push   eax
   0x08048094 <_start+20>:	pop    ecx
   0x08048095 <_start+21>:	push   WORD PTR ds:0x80490b0
   0x0804809c <_start+28>:	pop    ecx
End of assembler dump.
0x08048093 in _start ()
1: /x $eax = 0xaabbccdd
2: /x $ebx = 0xccdd
3: /x $ecx = 0x0
(gdb) nexti
0xbffff0ec:	0xdd	0xcc	0xbb	0xaa	0x01	0x00	0x00
0xbffff0ec:	0xccdd	0xaabb	0x0001	0x0000
0xbffff0ec:	0xaabbccdd	0x00000001	0xbffff2c7
0x80490b0:	0xaa	0xbb	0xcc	0xdd	0xee	0xff	0x11
Dump of assembler code from 0x8048094 to 0x804809e:
=> 0x08048094 <_start+20>:	pop    ecx
   0x08048095 <_start+21>:	push   WORD PTR ds:0x80490b0
   0x0804809c <_start+28>:	pop    ecx
   0x0804809d <_start+29>:	push   DWORD PTR ds:0x80490b0
End of assembler dump.
0x08048094 in _start ()
1: /x $eax = 0xaabbccdd
2: /x $ebx = 0xccdd
3: /x $ecx = 0x0
(gdb) nexti
0xbffff0f0:	0x01	0x00	0x00	0x00	0xc7	0xf2	0xff
0xbffff0f0:	0x0001	0x0000	0xf2c7	0xbfff
0xbffff0f0:	0x00000001	0xbffff2c7	0x00000000
0x80490b0:	0xaa	0xbb	0xcc	0xdd	0xee	0xff	0x11
Dump of assembler code from 0x8048095 to 0x804809f:
=> 0x08048095 <_start+21>:	push   WORD PTR ds:0x80490b0
   0x0804809c <_start+28>:	pop    ecx
   0x0804809d <_start+29>:	push   DWORD PTR ds:0x80490b0
End of assembler dump.
0x08048095 in _start ()
1: /x $eax = 0xaabbccdd
2: /x $ebx = 0xccdd
3: /x $ecx = 0xaabbccdd
(gdb) nexti
0xbffff0ee:	0xaa	0xbb	0x01	0x00	0x00	0x00	0xc7
0xbffff0ee:	0xbbaa	0x0001	0x0000	0xf2c7
0xbffff0ee:	0x0001bbaa	0xf2c70000	0x0000bfff
0x80490b0:	0xaa	0xbb	0xcc	0xdd	0xee	0xff	0x11
Dump of assembler code from 0x804809c to 0x80480a6:
=> 0x0804809c <_start+28>:	pop    ecx
   0x0804809d <_start+29>:	push   DWORD PTR ds:0x80490b0
   0x080480a3 <_start+35>:	pop    edx
   0x080480a4 <_start+36>:	mov    eax,0x1
End of assembler dump.
0x0804809c in _start ()
1: /x $eax = 0xaabbccdd
2: /x $ebx = 0xccdd
3: /x $ecx = 0xaabbccdd
(gdb) nexti
0xbffff0f2:	0x00	0x00	0xc7	0xf2	0xff	0xbf	0x00
0xbffff0f2:	0x0000	0xf2c7	0xbfff	0x0000
0xbffff0f2:	0xf2c70000	0x0000bfff	0xf2f20000
0x80490b0:	0xaa	0xbb	0xcc	0xdd	0xee	0xff	0x11
Dump of assembler code from 0x804809d to 0x80480a7:
=> 0x0804809d <_start+29>:	push   DWORD PTR ds:0x80490b0
   0x080480a3 <_start+35>:	pop    edx
   0x080480a4 <_start+36>:	mov    eax,0x1
End of assembler dump.
0x0804809d in _start ()
1: /x $eax = 0xaabbccdd
2: /x $ebx = 0xccdd
3: /x $ecx = 0x1bbaa
(gdb) nexti
0xbffff0ee:	0xaa	0xbb	0xcc	0xdd	0x00	0x00	0xc7
0xbffff0ee:	0xbbaa	0xddcc	0x0000	0xf2c7
0xbffff0ee:	0xddccbbaa	0xf2c70000	0x0000bfff
0x80490b0:	0xaa	0xbb	0xcc	0xdd	0xee	0xff	0x11
Dump of assembler code from 0x80480a3 to 0x80480ad:
=> 0x080480a3 <_start+35>:	pop    edx
   0x080480a4 <_start+36>:	mov    eax,0x1
   0x080480a9 <_start+41>:	mov    ebx,0x1
End of assembler dump.
0x080480a3 in _start ()
1: /x $eax = 0xaabbccdd
2: /x $ebx = 0xccdd
3: /x $ecx = 0x1bbaa
(gdb) nexti
0xbffff0f2:	0x00	0x00	0xc7	0xf2	0xff	0xbf	0x00
0xbffff0f2:	0x0000	0xf2c7	0xbfff	0x0000
0xbffff0f2:	0xf2c70000	0x0000bfff	0xf2f20000
0x80490b0:	0xaa	0xbb	0xcc	0xdd	0xee	0xff	0x11
Dump of assembler code from 0x80480a4 to 0x80480ae:
=> 0x080480a4 <_start+36>:	mov    eax,0x1
   0x080480a9 <_start+41>:	mov    ebx,0x1
End of assembler dump.
0x080480a4 in _start ()
1: /x $eax = 0xaabbccdd
2: /x $ebx = 0xccdd
3: /x $ecx = 0x1bbaa
(gdb) info registers 
eax            0xaabbccdd	-1430532899
ecx            0x1bbaa	113578
edx            0xddccbbaa	-573785174
ebx            0xccdd	52445
esp            0xbffff0f2	0xbffff0f2
ebp            0x0	0x0
esi            0x0	0
edi            0x0	0
eip            0x80480a4	0x80480a4 <_start+36>
eflags         0x202	[ IF ]
cs             0x73	115
ss             0x7b	123
ds             0x7b	123
es             0x7b	123
fs             0x0	0
gs             0x0	0
(gdb) info registers 
eax            0xaabbccdd	-1430532899
ecx            0x1bbaa	113578
edx            0xddccbbaa	-573785174
ebx            0xccdd	52445
esp            0xbffff0f2	0xbffff0f2
ebp            0x0	0x0
esi            0x0	0
edi            0x0	0
eip            0x80480a4	0x80480a4 <_start+36>
eflags         0x202	[ IF ]
cs             0x73	115
ss             0x7b	123
ds             0x7b	123
es             0x7b	123
fs             0x0	0
gs             0x0	0
(gdb) nexti
0xbffff0f2:	0x00	0x00	0xc7	0xf2	0xff	0xbf	0x00
0xbffff0f2:	0x0000	0xf2c7	0xbfff	0x0000
0xbffff0f2:	0xf2c70000	0x0000bfff	0xf2f20000
0x80490b0:	0xaa	0xbb	0xcc	0xdd	0xee	0xff	0x11
Dump of assembler code from 0x80480a9 to 0x80480b3:
=> 0x080480a9 <_start+41>:	mov    ebx,0x1
   0x080480ae <_start+46>:	int    0x80
   0x080480b0:	stos   BYTE PTR es:[edi],al
   0x080480b1:	mov    ebx,0xffeeddcc
End of assembler dump.
0x080480a9 in _start ()
1: /x $eax = 0x1
2: /x $ebx = 0xccdd
3: /x $ecx = 0x1bbaa
(gdb) nexti
0xbffff0f2:	0x00	0x00	0xc7	0xf2	0xff	0xbf	0x00
0xbffff0f2:	0x0000	0xf2c7	0xbfff	0x0000
0xbffff0f2:	0xf2c70000	0x0000bfff	0xf2f20000
0x80490b0:	0xaa	0xbb	0xcc	0xdd	0xee	0xff	0x11
Dump of assembler code from 0x80480ae to 0x80480b8:
=> 0x080480ae <_start+46>:	int    0x80
   0x080480b0:	stos   BYTE PTR es:[edi],al
   0x080480b1:	mov    ebx,0xffeeddcc
   0x080480b6:	adc    DWORD PTR [edx],esp
End of assembler dump.
0x080480ae in _start ()
1: /x $eax = 0x1
2: /x $ebx = 0x1
3: /x $ecx = 0x1bbaa
(gdb) nexti
[Inferior 1 (process 5382) exited with code 01]

